{"version":3,"sources":["components/Header.js","components/Footer.js","components/Home.js","actions.js","types.js","components/ValidateOwnership.js","operations.js","components/Tx.js","components/Claim.js","components/TransferToRegistrar.js","components/Setup.js","components/Subdomains.js","components/FAQ.js","serviceWorker.js","reducer.js","configureStore.js","index.js","App.js"],"names":["className","href","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Container","Row","target","rel","props","state","domain","handleChangeDomain","bind","event","this","setState","value","Form","onSubmit","preventDefault","window","location","FormGroup","InputGroup","FormControl","onChange","Append","Button","Component","errorValidateOwnership","error","ValidateOwnershipComponent","validate","handleChangeValue","e","clean","loading","placeholder","disabled","Spinner","variant","connect","app","validateOwnership","dispatch","account","rns","Web3","process","eth","Contract","constant","inputs","name","outputs","payable","stateMutability","node","namehash","hash","ethereum","enable","then","accounts","toLowerCase","methods","owner","call","_owner","receiveValidateOwnership","catch","tx","REACT_APP_RSK_EXPLORER","claim","from","registrar","web3","send","receiveClaim","errorClaim","bathRegistrarClaim","stateProps","dispatchProps","ownProps","claiming","Tx","transactionHash","message","transferToRegistrar","transfer","setOwner","receiveTransferToRegistrar","errorTransferToRegistrar","enabled","transferring","claimed","transferred","ValidateOwnership","Claim","TransferToRegistrar","validating","data","allSolvedConflicts","allUnsolvedConflicts","parsed","accepted","handleUploadFile","accept","i","address","solvedConflicts","unsolvedConflicts","indexOf","replace","labelNoSpaces","labelToLower","indexOfAt","slice","noMails","labelsNoEnie","isAddress","invalidAddress","push","onFileLoaded","animation","onClick","Table","map","index","key","Object","keys","length","errors","trim","parseSolvedErrors","parseUnsolvedErrors","Boolean","hostname","match","initialState","reducer","action","history","combineReducers","router","connectRouter","createBrowserHistory","middleware","thunk","routerMiddleware","preloadedState","store","createStore","createRootReducer","compose","applyMiddleware","ReactDOM","render","Header","path","FAQ","Footer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e219b658.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => (\n  <nav className=\"navbar navbar-expand-md navbar-light bg-light fixed-top\">\n    <div className=\"container\">\n      <a className=\"navbar-brand\" href=\".\">\n        <img src=\"assets/img/logo.svg\" className=\"logo\" alt=\"logo\" />\n      </a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to=\"/\">Home</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/setup\">Setup</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/subdomains\">Create subdomains</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/faq\">FAQ</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\n\nexport default () => (\n  <footer>\n    <div className=\"footer-top\">\n      <Container>\n        <Row>\n          <div className=\"col-lg-12\">\n            <img src=\"assets/img/powered_by_iov.svg\" className=\"img-fluid powered_by\" alt=\"powered_by\" />\n          </div>\n          <div className=\"col-lg-4\">\n            <span className=\"footer-title mb-3\">What is RNS?</span>\n            <p className=\"mb-5\">RIF Name Service provides an architecture which enables the identification of blockchain addresses by human-readable names.</p>\n          </div>\n          <div className=\"col-lg-3\" />\n          <div className=\"col-lg-3\" />\n          <div className=\"col-lg-2\">\n            <a href=\"https://gitter.im/rsksmart/rif-name-service\" target=\"_blank\" rel=\"noopener noreferrer\">Gitter</a>\n            <a href=\"https://rsksamrt.github.io/rif.rns/tools/subdomain-batch\" target=\"_blank\" rel=\"noopener noreferrer\">Docs</a>\n            <a href=\"https://github.com/rnsdomains/rns-subdomain-batch\" target=\"_blank\" rel=\"noopener noreferrer\">Issues</a>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  </footer>\n);\n","import React, { Component } from 'react';\nimport {\n  Form,\n  Container,\n  Button,\n  InputGroup,\n  FormControl,\n  FormGroup,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      domain: '',\n    };\n\n    this.handleChangeDomain = this.handleChangeDomain.bind(this);\n  }\n\n  handleChangeDomain(event) {\n    this.setState({ domain: event.target.value });\n  }\n\n  render() {\n    const { domain } = this.state;\n\n    return (\n      <Container>\n        <div className=\"col-lg-12 text-center main-title-box\">\n          <h1><b>RNS Subdomains</b></h1>\n          <p>\n            Use this tool to create subdomains in batch.\n          </p>\n          <hr />\n          <h3>Requirements</h3>\n          <a\n            href=\"https://chrome.google.com/webstore/detail/nifty-wallet/jbdaocneiiinmjbjlgalhcelgbejmnid\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Nifty Wallet\n          </a>\n          {' (recommended) or '}\n          <a\n            href=\"https://metamask.io\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Metamask\n          </a>\n          <hr />\n          An RNS name\n          <br />\n          <i>Skip this if you already own one with your browser wallet.</i>\n          <Form onSubmit={(event) => {\n            event.preventDefault();\n            window.location.href(`https://manager.rns.rifos.org/register?name=${domain}`);\n          }}\n          >\n            <FormGroup>\n              <InputGroup>\n                <FormControl type=\"text\" onChange={this.handleChangeDomain} />\n                <InputGroup.Append>\n                  <Button type=\"submit\">Register</Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </FormGroup>\n          </Form>\n          <hr />\n          <Link to=\"/setup\">Setup</Link>\n          {' your domain'}\n        </div>\n      </Container>\n    );\n  }\n}\n","import {\n  REQUEST_VALIDATE_OWNERSHIP, RECEIVE_VALIDATE_OWNERSHIP,\n  ERROR_VALIDATE_OWNERSHIP, CLEAN_VALIDATE_OWNERSHIP,\n  REQUEST_TRANSFER_TO_REGISTRAR, ERROR_TRANSFER_TO_REGISTRAR, RECEIVE_TRANSFER_TO_REGISTRAR,\n  REQUEST_CLAIM, RECEIVE_CLAIM, ERROR_CLAIM,\n} from './types';\n\nexport const requestValidateOwnership = () => ({\n  type: REQUEST_VALIDATE_OWNERSHIP,\n});\n\nexport const receiveValidateOwnership = (domain, owner) => ({\n  type: RECEIVE_VALIDATE_OWNERSHIP,\n  domain,\n  owner,\n});\n\nexport const errorValidateOwnership = (error) => ({\n  type: ERROR_VALIDATE_OWNERSHIP,\n  error,\n});\n\nexport const cleanValidateOwnership = () => ({\n  type: CLEAN_VALIDATE_OWNERSHIP,\n});\n\nexport const requestClaim = () => ({\n  type: REQUEST_CLAIM,\n});\n\nexport const receiveClaim = (tx) => ({\n  type: RECEIVE_CLAIM,\n  tx,\n});\n\nexport const errorClaim = (error) => ({\n  type: ERROR_CLAIM,\n  error,\n});\n\nexport const requestTransferToRegistrar = () => ({\n  type: REQUEST_TRANSFER_TO_REGISTRAR,\n});\n\nexport const receiveTransferToRegistrar = (tx) => ({\n  type: RECEIVE_TRANSFER_TO_REGISTRAR,\n  tx,\n});\n\nexport const errorTransferToRegistrar = (error) => ({\n  type: ERROR_TRANSFER_TO_REGISTRAR,\n  error,\n});\n","export const REQUEST_VALIDATE_OWNERSHIP = 'REQUEST_VALIDATE_OWNERSHIP';\nexport const RECEIVE_VALIDATE_OWNERSHIP = 'RECEIVE_VALIDATE_OWNERSHIP';\nexport const ERROR_VALIDATE_OWNERSHIP = 'ERROR_VALIDATE_OWNERSHIP';\nexport const CLEAN_VALIDATE_OWNERSHIP = 'CLEAN_VALIDATE_OWNERSHIP';\n\nexport const REQUEST_CLAIM = 'REQUEST_CALIM';\nexport const RECEIVE_CLAIM = 'RECEIVE_CLAIM';\nexport const ERROR_CLAIM = 'ERROR_CLAIM';\n\nexport const REQUEST_TRANSFER_TO_REGISTRAR = 'REQUEST_TRANSFER_TO_REGISTRAR';\nexport const RECEIVE_TRANSFER_TO_REGISTRAR = 'RECEIVE_TRANSFER_TO_REGISTRAR';\nexport const ERROR_TRANSFER_TO_REGISTRAR = 'ERROR_TRANSFER_TO_REGISTRAR';\n","import React, { Component } from 'react';\nimport {\n  Form, FormControl, Button, InputGroup, Spinner,\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { validateOwnership } from '../operations';\nimport { cleanValidateOwnership } from '../actions';\n\nclass ValidateOwnershipComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n    };\n\n    this.validate = this.validate.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n  }\n\n  handleChangeValue(e) {\n    this.setState({ value: e.target.value });\n\n    const { clean } = this.props;\n    clean();\n  }\n\n  validate(event) {\n    event.preventDefault();\n    const { validate } = this.props;\n    const { value } = this.state;\n\n    validate(value);\n  }\n\n  render() {\n    const { loading, error } = this.props;\n\n    return (\n      <Form onSubmit={this.validate}>\n        <InputGroup>\n          <FormControl type=\"text\" placeholder=\"domain.rsk\" disabled={loading} onChange={this.handleChangeValue} />\n          <InputGroup.Append>\n            <Button type=\"submit\" disabled={loading}>Validate</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        {\n          loading && <Spinner variant=\"grow\" />\n        }\n        {\n          error && <small className=\"text-danger\">{error}</small>\n        }\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.app.validateOwnership.loading,\n  error: state.app.validateOwnership.error,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  validate: (domain) => dispatch(validateOwnership(domain)),\n  clean: () => dispatch(cleanValidateOwnership()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ValidateOwnershipComponent);\n","import Web3 from 'web3';\nimport namehash from 'eth-ens-namehash';\nimport {\n  requestValidateOwnership, receiveValidateOwnership, errorValidateOwnership,\n  requestTransferToRegistrar, receiveTransferToRegistrar, errorTransferToRegistrar,\n  requestClaim, receiveClaim, errorClaim,\n} from './actions';\n\n// This method will validate ownrship of the domain with\n// the account unlocked in Nifty Wallet.\nexport const validateOwnership = (domain) => (dispatch) => {\n  dispatch(requestValidateOwnership());\n\n  const web3 = new Web3(process.env.REACT_APP_RSK_NODE);\n\n  const rns = new web3.eth.Contract([\n    {\n      constant: true,\n      inputs: [\n        { name: 'node', type: 'bytes32' },\n      ],\n      name: 'owner',\n      outputs: [\n        { name: '', type: 'address' },\n      ],\n      payable: false,\n      stateMutability: 'view',\n      type: 'function',\n    },\n  ], process.env.REACT_APP_RNS_REGISTRY);\n\n  const node = namehash.hash(domain);\n\n  let account;\n\n  return window.ethereum.enable()\n    .then((accounts) => {\n      account = accounts[0].toLowerCase();\n    })\n    .then(() => rns.methods.owner(node).call())\n    .then((_owner) => {\n      const owner = _owner.toLowerCase();\n\n      if (owner === account) dispatch(receiveValidateOwnership(domain, owner));\n      else dispatch(errorValidateOwnership('Not owner'));\n    })\n    .catch(errorValidateOwnership);\n};\n\nexport const bathRegistrarClaim = (domain, from) => (dispatch) => {\n  dispatch(requestClaim());\n\n  const web3 = new Web3(window.web3);\n\n  const registrar = new web3.eth.Contract([\n    {\n      constant: false,\n      inputs: [\n        { name: 'node', type: 'bytes32' },\n      ],\n      name: 'claim',\n      outputs: [],\n      payable: false,\n      stateMutability: 'nonpayable',\n      type: 'function',\n    },\n  ], process.env.REACT_APP_BATCH_REGISTRAR);\n\n  const node = namehash.hash(domain);\n\n\n  return registrar.methods.claim(node).send({ from })\n    .then((tx) => dispatch(receiveClaim(tx)))\n    .catch((error) => dispatch(errorClaim(error)));\n};\n\nexport const transferToRegistrar = (domain, from) => (dispatch) => {\n  dispatch(requestTransferToRegistrar());\n\n  const web3 = new Web3(window.web3);\n\n  const rns = new web3.eth.Contract([\n    {\n      constant: false,\n      inputs: [\n        { name: 'node', type: 'bytes32' },\n        { name: 'ownerAddress', type: 'address' },\n      ],\n      name: 'setOwner',\n      outputs: [],\n      payable: false,\n      stateMutability: 'nonpayable',\n      type: 'function',\n    },\n  ], process.env.REACT_APP_RNS_REGISTRY);\n\n  const node = namehash.hash(domain);\n\n  return rns.methods.setOwner(node, process.env.REACT_APP_BATCH_REGISTRAR).send({ from })\n    .then((tx) => dispatch(receiveTransferToRegistrar(tx)))\n    .catch((error) => dispatch(errorTransferToRegistrar(error)));\n};\n","import React from 'react';\n\nexport default ({ tx }) => <a href={`${process.env.REACT_APP_RSK_EXPLORER}/tx/${tx}`}>{tx}</a>;\n","import React from 'react';\nimport { Button, Form, FormGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bathRegistrarClaim } from '../operations';\nimport Tx from './Tx';\n\nconst ClaimComponent = ({\n  claim, claiming, tx, error,\n}) => (\n  <Form onSubmit={(e) => {\n    e.preventDefault();\n    claim();\n  }}\n  >\n    {!tx && <FormGroup><Button type=\"submit\" disabled={claiming}>Claim</Button></FormGroup>}\n    {tx && <small className=\"text-success\"><Tx tx={tx.transactionHash} /></small>}\n    {error && <small className=\"text-danger\">{error.message}</small>}\n  </Form>\n);\n\nconst mapStateToProps = ({ app }) => ({\n  ...app.claim,\n  domain: app.domain,\n  from: app.owner,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  claim: (domain, from) => dispatch(bathRegistrarClaim(domain, from)),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n  ...ownProps,\n  ...stateProps,\n  claim: () => dispatchProps.claim(stateProps.domain, stateProps.from),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(ClaimComponent);\n","import React from 'react';\nimport { Button, Form, FormGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { transferToRegistrar } from '../operations';\nimport Tx from './Tx';\n\nconst TransferToRegistrarComponent = ({\n  enabled, transfer, transferring, tx, error,\n}) => {\n  const disabled = !enabled || transferring;\n\n  return (\n    <Form onSubmit={(e) => {\n      e.preventDefault();\n      transfer();\n    }}\n    >\n      {!tx && (\n      <FormGroup>\n        <Button type=\"submit\" className={disabled && 'btn-info'} disabled={disabled}>Transfer</Button>\n      </FormGroup>\n      )}\n      {tx && <small className=\"text-success\"><Tx tx={tx.transactionHash} /></small>}\n      {error && <small className=\"text-danger\">{error.message}</small>}\n    </Form>\n  );\n};\n\nconst mapStateToProps = ({ app }) => ({\n  ...app.transferToRegistrar,\n  domain: app.domain,\n  from: app.owner,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  transfer: (domain, from) => dispatch(transferToRegistrar(domain, from)),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n  ...ownProps,\n  ...stateProps,\n  transfer: () => dispatchProps.transfer(stateProps.domain, stateProps.from),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(TransferToRegistrarComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ValidateOwnership from './ValidateOwnership';\nimport Claim from './Claim';\nimport TransferToRegistrar from './TransferToRegistrar';\n\nconst Setup = ({ domain, claimed, transferred }) => (\n  <Container>\n    <div className=\"col-lg-12 text-center main-title-box\">\n      <h1><b>Setup</b></h1>\n      {\n        domain\n          ? <h3>{domain}</h3>\n          : (\n            <>\n              <p>Authenticate your domain</p>\n              <ValidateOwnership />\n              <i>Check the domain you will use to register subdomains of.</i>\n            </>\n          )\n      }\n      {\n        domain\n        && (\n          <>\n            <hr />\n            <p>Now you have to execute 2 transactions. You need to do this just once.</p>\n            <p>Claim your domain in the batch registrar contract.</p>\n            <Claim />\n            <p>Transfer ownership to Subdomain Registrar.</p>\n            <TransferToRegistrar enabled={claimed} />\n            <i>\n            Subdomain Registrar will sponsor your domain momentarily\n            to register subdomains in batch.\n            </i>\n          </>\n        )\n      }\n      {\n        domain && transferred\n        && (\n          <>\n            <hr />\n            <p>\n            Please\n              {' '}\n              <Link to=\"/subdomains\">validate your csv files</Link>\n              {' '}\nbefore executing any registration.\n            </p>\n          </>\n        )\n      }\n    </div>\n  </Container>\n);\n\nconst mapStateToProps = ({ app }) => ({\n  domain: app.domain,\n  claimed: !!app.claim.tx,\n  transferred: !!app.transferToRegistrar.tx,\n});\n\nexport default connect(mapStateToProps)(Setup);\n","import React, { Component } from 'react';\nimport { Container, Table, Spinner, Button } from 'react-bootstrap';\nimport CSVReader from 'react-csv-reader';\nimport { isAddress } from 'web3-utils';\n\nconst parseSolvedErrors = (errors) => {\n  let error = '';\n\n  if(errors.labelNoSpaces)\n    error += 'No spaces\\n';\n\n  if(errors.labelToLower)\n    error += 'Lower cases\\n';\n\n  if(errors.noMails)\n    error += 'No mails\\n';\n\n  if(errors.labelsNoEnie)\n    error += `No 'ñ'\\n`;\n\n  return error.trim();\n}\n\nconst parseUnsolvedErrors = (errors) => {\n  let error = '';\n\n  if(errors.invalidAddress)\n    error += 'Invalid address\\n';\n\n  return error.trim();\n}\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      validating: false,\n      data: null,\n      allSolvedConflicts: null,\n      allUnsolvedConflicts: null,\n      parsed: null,\n      accepted: false,\n    };\n\n    this.handleUploadFile = this.handleUploadFile.bind(this);\n    this.accept = this.accept.bind(this);\n  }\n\n  handleUploadFile (data) {\n    this.setState({ validating: true });\n\n    let allSolvedConflicts = [];\n    let allUnsolvedConflicts = [];\n\n    let parsed = [];\n\n    for (let i in data) {\n      let [domain, address] = data[i];\n\n      const solvedConflicts = {};\n      const unsolvedConflicts = {};\n\n      if (domain.indexOf(' ') >= 0) {\n        domain = domain.replace(/ /g,'');\n        solvedConflicts.labelNoSpaces = true;\n      }\n\n      if (domain !== domain.toLowerCase()) {\n        domain = domain.toLowerCase();\n        solvedConflicts.labelToLower = true;\n      }\n\n      let indexOfAt = domain.indexOf('@');\n      if (indexOfAt >= 0) {\n        domain = domain.slice(0, indexOfAt);\n        solvedConflicts.noMails = true;\n      }\n\n      if (domain.indexOf('ñ') >= 0) {\n        domain = domain.replace(/(ñ)/g, 'n');\n        solvedConflicts.labelsNoEnie = true;\n      }\n\n      address = address.toLowerCase();\n\n      if(!isAddress(address)) {\n        unsolvedConflicts.invalidAddress = true;\n      }\n\n      allSolvedConflicts.push(solvedConflicts);\n      allUnsolvedConflicts.push(unsolvedConflicts);\n      parsed.push([domain, address])\n    }\n\n    this.setState({\n      validating: false,\n      data,\n      allSolvedConflicts,\n      allUnsolvedConflicts,\n      parsed,\n    });\n  }\n\n  accept() {\n    this.setState({ accepted: true });\n  }\n\n  render () {\n    const {\n      validating,\n      data,\n      allSolvedConflicts,\n      allUnsolvedConflicts,\n      parsed,\n      accepted,\n    } = this.state;\n\n    return (\n      <Container className=\"text-center\">\n        <div className=\"col-lg-12 main-title-box\">\n          <h1><b>Register subdomains</b></h1>\n        </div>\n        <p>\n          The <code>csv</code> file must include only two columns:\n            the labels to register in the first column\n            and the address to set in the second column.\n        </p>\n        <p>\n          This app will validate all labels and addresses. Import the <code>csv</code> file and validate it.\n        </p>\n        <CSVReader onFileLoaded={this.handleUploadFile} disabled={validating} />\n        {validating && <Spinner animation=\"grow\" />}\n        {!validating && parsed && !accepted && <Button onClick={this.accept}>Ok</Button>}\n        {\n          !validating && parsed && !accepted &&\n          <Table>\n            <thead>\n              <tr>\n                <th>input</th>\n                <th>solved conflicts</th>\n                <th>unsolved conflicts</th>\n                <th>to register</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                data.map((value, index) => (\n                  <tr key={index}>\n                    <td>{`(${value[0]}, ${value[1]})`}</td>\n                    <td className={Object.keys(allSolvedConflicts[index]).length > 0 ? 'table-warning' : ''}><p>{parseSolvedErrors(allSolvedConflicts[index])}</p></td>\n                    <td className={Object.keys(allUnsolvedConflicts[index]).length > 0 ? 'table-error' : ''}><p>{parseUnsolvedErrors(allUnsolvedConflicts[index])}</p></td>\n                    <td>{`(${parsed[index][0]}, ${parsed[index][1]})`}</td>\n                  </tr>\n                ))\n              }\n            </tbody>\n          </Table>\n        }\n        <hr />\n      </Container>\n    );\n  }\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nexport default () => (\n  <Container>\n    <div className=\"col-lg-12 text-center main-title-box\">\n      <h1><b>FAQ</b></h1>\n    </div>\n  </Container>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((_registration) => {\n      const registration = _registration;\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              /* eslint-disable no-console */\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                /* eslint-disable no-console */\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              /* eslint-disable no-console */\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      /* eslint-disable no-console */\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport {\n  REQUEST_VALIDATE_OWNERSHIP, RECEIVE_VALIDATE_OWNERSHIP,\n  ERROR_VALIDATE_OWNERSHIP, CLEAN_VALIDATE_OWNERSHIP,\n  REQUEST_TRANSFER_TO_REGISTRAR, RECEIVE_TRANSFER_TO_REGISTRAR, ERROR_TRANSFER_TO_REGISTRAR,\n  REQUEST_CLAIM, RECEIVE_CLAIM, ERROR_CLAIM,\n} from './types';\n\nconst initialState = {\n  domain: null,\n  owner: null,\n  validateOwnership: {\n    enabled: false,\n    loading: false,\n    error: null,\n  },\n  claim: {\n    claiming: false,\n    tx: null,\n    error: null,\n  },\n  transferToRegistrar: {\n    transferring: false,\n    tx: null,\n    error: null,\n  },\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REQUEST_VALIDATE_OWNERSHIP: return {\n      ...state,\n      domain: null,\n      owner: null,\n      validateOwnership: {\n        loading: true,\n        error: null,\n      },\n    };\n    case RECEIVE_VALIDATE_OWNERSHIP: return {\n      ...state,\n      domain: action.domain,\n      owner: action.owner,\n      validateOwnership: {\n        loading: false,\n        error: null,\n      },\n    };\n    case ERROR_VALIDATE_OWNERSHIP: return {\n      ...state,\n      domain: null,\n      owner: null,\n      validateOwnership: {\n        loading: false,\n        error: action.error,\n      },\n    };\n    case CLEAN_VALIDATE_OWNERSHIP: return {\n      ...state,\n      domain: null,\n      owner: null,\n      validateOwnership: {\n        loading: false,\n        error: null,\n      },\n    };\n    case REQUEST_CLAIM: return {\n      ...state,\n      claim: {\n        claiming: true,\n        tx: null,\n        error: null,\n      },\n    };\n    case RECEIVE_CLAIM: return {\n      ...state,\n      claim: {\n        claiming: false,\n        tx: action.tx,\n        error: null,\n      },\n    };\n    case ERROR_CLAIM: return {\n      ...state,\n      claim: {\n        claiming: false,\n        tx: null,\n        error: action.error,\n      },\n    };\n    case REQUEST_TRANSFER_TO_REGISTRAR: return {\n      ...state,\n      transferToRegistrar: {\n        transferring: true,\n        tx: null,\n        error: null,\n      },\n    };\n    case RECEIVE_TRANSFER_TO_REGISTRAR: return {\n      ...state,\n      transferToRegistrar: {\n        transferring: false,\n        tx: action.tx,\n        error: null,\n      },\n    };\n    case ERROR_TRANSFER_TO_REGISTRAR: return {\n      ...state,\n      transferToRegistrar: {\n        transferring: false,\n        tx: null,\n        error: action.error,\n      },\n    };\n    default: return state;\n  }\n};\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  app: reducer,\n});\n","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport createRootReducer from './reducer';\n\nexport const history = createBrowserHistory();\n\nconst middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history), // root reducer with router state\n    preloadedState,\n    compose(\n      applyMiddleware(...middleware),\n    ),\n  );\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore, { history } from './configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport {\n  Header,\n  Footer,\n  Home,\n  Setup,\n  Subdomains,\n  FAQ,\n} from './components';\n\nexport default () => (\n  <>\n    <Header />\n    <Switch>\n      <Route path=\"/setup\" render={() => <Setup />} />\n      <Route path=\"/subdomains\" render={() => <Subdomains />} />\n      <Route path=\"/faq\" render={() => <FAQ />} />\n      <Route path=\"/\" render={() => <Home />} />\n    </Switch>\n    <Footer />\n  </>\n);\n"],"sourceRoot":""}