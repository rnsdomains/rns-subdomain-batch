{"version":3,"sources":["components/Header.js","types.js","components/Footer.js","lib/domains.js","components/Home.js","actions.js","components/ValidateOwnership.js","operations.js","components/Tx.js","components/Claim.js","components/TransferToRegistrar.js","components/Setup.js","components/Subdomains.js","components/Register.js","components/FAQ.js","components/Auth.js","components/NotFound.js","components/Admin.js","App.js","serviceWorker.js","reducer.js","configureStore.js","index.js"],"names":["connect","app","authenticatedAs","auth","permissions","length","domain","showRegister","includes","showAdmin","className","to","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Container","Row","href","target","rel","isValidLabel","label","match","props","state","valid","handleChangeLabel","bind","event","value","this","setState","Col","Form","onSubmit","preventDefault","window","open","method","FormGroup","InputGroup","FormControl","onChange","Append","Text","Button","Component","errorValidateOwnership","error","ValidateOwnershipComponent","validate","handleChangeValue","e","clean","loading","Group","Label","placeholder","disabled","Spinner","variant","validateOwnership","dispatch","account","rns","Web3","process","eth","Contract","constant","inputs","name","outputs","payable","stateMutability","node","namehash","hash","ethereum","enable","then","accounts","toLowerCase","methods","owner","call","_owner","receiveValidateOwnership","catch","tx","claim","from","registrar","web3","send","receiveClaim","errorClaim","bathRegistrarClaim","stateProps","dispatchProps","ownProps","claiming","Tx","transactionHash","message","transferToRegistrar","transfer","setOwner","receiveTransferToRegistrar","errorTransferToRegistrar","enabled","transferring","claimed","transferred","ValidateOwnership","OverlayTrigger","placement","overlay","Tooltip","Claim","TransferToRegistrar","Subdomains","validating","data","allSolvedConflicts","allUnsolvedConflicts","parsed","handleUploadFile","accept","handleDownloadParsed","i","address","solvedConflicts","unsolvedConflicts","indexOf","replace","labelNoSpaces","labelToLower","indexOfAt","slice","noMails","labelsNoEnie","noSeparators","noTilde","isAddress","invalidAddress","invalidLabel","push","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","download","Date","now","result","parsedToCsv","confirmParsed","goToRegister","parsedData","labels","addresses","sha3","amountOfParts","Math","floor","parts","parsedDataToParts","anyUnsolved","some","c","Object","keys","onFileLoaded","animation","onClick","Table","map","index","key","errors","parseSolvedErrors","parseUnsolvedErrors","registerResults","register","requestRegister","receiveRegister","errorRegister","dataRow","registering","authenticate","authenticating","isRegistrant","nodeOwner","receiveAuth","errorAuth","exact","path","render","Admin","Auth","FAQ","NotFound","Footer","Boolean","location","hostname","initialState","createRegistration","reducer","action","r","history","combineReducers","router","connectRouter","createBrowserHistory","basename","middleware","thunk","routerMiddleware","preloadedState","store","createStore","createRootReducer","compose","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.079cbcf3.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { NODE_OWNER, REGISTRANT } from '../types';\n\nconst Header = ({ authenticatedAs, showRegister, showAdmin }) => (\n  <nav className=\"navbar navbar-expand-md navbar-light bg-light fixed-top\">\n    <div className=\"container\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        <img src=\"assets/img/logo.svg\" className=\"logo\" alt=\"logo\" />\n      </Link>\n      <h3>\n        Subdomain batch\n      </h3>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to=\"/\">Home</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/setup\">Setup</Link>\n          </li>\n          {\n            showRegister &&\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/subdomains\">Register subdomains</Link>\n            </li>\n          }\n          {\n            showAdmin &&\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/admin\">Admin</Link>\n            </li>\n          }\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/faq\">FAQ</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"btn btn btn-primary my-2 my-sm-0\" to={!authenticatedAs ? '/login' : ''}>\n              {authenticatedAs || 'Login'}\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nconst mapStateToProps = ({ app }) => ({\n  authenticatedAs: app.auth.permissions.length > 0 && app.domain,\n  showRegister: app.auth.permissions.includes(REGISTRANT),\n  showAdmin: app.auth.permissions.includes(NODE_OWNER),\n});\n\nexport default connect(mapStateToProps)(Header);\n","export const REQUEST_VALIDATE_OWNERSHIP = 'REQUEST_VALIDATE_OWNERSHIP';\nexport const RECEIVE_VALIDATE_OWNERSHIP = 'RECEIVE_VALIDATE_OWNERSHIP';\nexport const ERROR_VALIDATE_OWNERSHIP = 'ERROR_VALIDATE_OWNERSHIP';\nexport const CLEAN_VALIDATE_OWNERSHIP = 'CLEAN_VALIDATE_OWNERSHIP';\n\nexport const REQUEST_CLAIM = 'REQUEST_CLAIM';\nexport const RECEIVE_CLAIM = 'RECEIVE_CLAIM';\nexport const ERROR_CLAIM = 'ERROR_CLAIM';\n\nexport const REQUEST_TRANSFER_TO_REGISTRAR = 'REQUEST_TRANSFER_TO_REGISTRAR';\nexport const RECEIVE_TRANSFER_TO_REGISTRAR = 'RECEIVE_TRANSFER_TO_REGISTRAR';\nexport const ERROR_TRANSFER_TO_REGISTRAR = 'ERROR_TRANSFER_TO_REGISTRAR';\n\nexport const REQUEST_AUTH = 'REQUEST_AUTH';\nexport const RECEIVE_AUTH = 'RECEIVE_AUTH';\nexport const ERROR_AUTH = 'ERROR_AUTH';\nexport const NODE_OWNER = 'NODE_OWNER';\nexport const REGISTRANT = 'REGISTRANT';\n\nexport const CONFIRM_PARSED = 'CONFIRM_PARSED';\n\nexport const REQUEST_REGISTER = 'REQUEST_REGISTER';\nexport const RECEIVE_REGISTER = 'RECEIVE_REGISTER';\nexport const ERROR_REGISTER = 'ERROR_REGISTER';\n","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\n\nexport default () => (\n  <footer>\n    <div className=\"footer-top\">\n      <Container>\n        <Row>\n          <div className=\"col-lg-12\">\n            <img src=\"assets/img/powered_by_iov.svg\" className=\"img-fluid powered_by\" alt=\"powered_by\" />\n          </div>\n          <div className=\"col-lg-4\">\n            <span className=\"footer-title mb-3\">What is RNS?</span>\n            <p className=\"mb-5\">RIF Name Service provides an architecture which enables the identification of blockchain addresses by human-readable names.</p>\n          </div>\n          <div className=\"col-lg-3\" />\n          <div className=\"col-lg-3\" />\n          <div className=\"col-lg-2\">\n            <a href=\"https://gitter.im/rsksmart/rif-name-service\" target=\"_blank\" rel=\"noopener noreferrer\">Gitter</a>\n            <a href=\"https://rsksamrt.github.io/rif.rns/tools/subdomain-batch\" target=\"_blank\" rel=\"noopener noreferrer\">Docs</a>\n            <a href=\"https://github.com/rnsdomains/rns-subdomain-batch\" target=\"_blank\" rel=\"noopener noreferrer\">Issues</a>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  </footer>\n);\n","// eslint-disable-next-line import/prefer-default-export\nexport const isValidLabel = (label) => label.length > 0 && !!label.match(/^[a-z0-9]+$/i);\n","import React, { Component } from 'react';\nimport {\n  Form,\n  Container,\n  Button,\n  InputGroup,\n  FormControl,\n  FormGroup,\n  Row,\n  Col,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { isValidLabel } from '../lib';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      label: '',\n      valid: true,\n    };\n\n    this.handleChangeLabel = this.handleChangeLabel.bind(this);\n  }\n\n  handleChangeLabel(event) {\n    const label = event.target.value;\n\n    this.setState({\n      label,\n      valid: isValidLabel(label),\n    });\n  }\n\n  render() {\n    const { label, valid } = this.state;\n\n    return (\n      <Container>\n        <div className=\"col-lg-12 text-center main-title-box\">\n          <h1><b>RNS Subdomains</b></h1>\n          <p>\n            Use this tool to create subdomains in batch.\n          </p>\n          <hr />\n          <h2>Requirements</h2>\n          <Row>\n            <Col>\n              <h3>Browser wallet</h3>\n              <a\n                href=\"https://chrome.google.com/webstore/detail/nifty-wallet/jbdaocneiiinmjbjlgalhcelgbejmnid\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n              Nifty Wallet\n              </a>\n              {' (recommended) or '}\n              <a\n                href=\"https://metamask.io\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n              Metamask\n              </a>\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            <Col>\n              <h3>An RNS domain</h3>\n              <Form\n                onSubmit={(event) => {\n                  event.preventDefault();\n                  if (valid) window.open(`https://manager.rns.rifos.org/search?domain=${label}`);\n                }}\n                method=\"get\"\n                target=\"_blank\"\n              >\n                <FormGroup>\n                  <InputGroup>\n                    <FormControl type=\"text\" onChange={this.handleChangeLabel} className={!valid && 'is-invalid'} />\n                    <InputGroup.Append>\n                      <InputGroup.Text>.rsk</InputGroup.Text>\n                    </InputGroup.Append>\n                    <InputGroup.Append>\n                      <Button type=\"submit\">Register</Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  {\n                    !valid\n                    && (\n                    <Form.Text className=\"text-muted\">\n                      Only lower cases or numbers.\n                    </Form.Text>\n                    )\n                  }\n                </FormGroup>\n              </Form>\n              <i>Skip this if you already own one with your browser wallet.</i>\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            <Col>\n              <h3>Setup</h3>\n              <Link to=\"/setup\">Setup</Link>\n              {' your domain to register subdomains in batch'}\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    );\n  }\n}\n","import {\n  REQUEST_VALIDATE_OWNERSHIP, RECEIVE_VALIDATE_OWNERSHIP,\n  ERROR_VALIDATE_OWNERSHIP, CLEAN_VALIDATE_OWNERSHIP,\n  REQUEST_TRANSFER_TO_REGISTRAR, ERROR_TRANSFER_TO_REGISTRAR, RECEIVE_TRANSFER_TO_REGISTRAR,\n  REQUEST_CLAIM, RECEIVE_CLAIM, ERROR_CLAIM,\n  REQUEST_AUTH, RECEIVE_AUTH, ERROR_AUTH, CONFIRM_PARSED,\n  REQUEST_REGISTER, RECEIVE_REGISTER, ERROR_REGISTER,\n} from './types';\n\nexport const requestValidateOwnership = () => ({\n  type: REQUEST_VALIDATE_OWNERSHIP,\n});\n\nexport const receiveValidateOwnership = (domain, owner) => ({\n  type: RECEIVE_VALIDATE_OWNERSHIP,\n  domain,\n  owner,\n});\n\nexport const errorValidateOwnership = (error) => ({\n  type: ERROR_VALIDATE_OWNERSHIP,\n  error,\n});\n\nexport const cleanValidateOwnership = () => ({\n  type: CLEAN_VALIDATE_OWNERSHIP,\n});\n\nexport const requestClaim = () => ({\n  type: REQUEST_CLAIM,\n});\n\nexport const receiveClaim = (tx) => ({\n  type: RECEIVE_CLAIM,\n  tx,\n});\n\nexport const errorClaim = (error) => ({\n  type: ERROR_CLAIM,\n  error,\n});\n\nexport const requestTransferToRegistrar = () => ({\n  type: REQUEST_TRANSFER_TO_REGISTRAR,\n});\n\nexport const receiveTransferToRegistrar = (tx) => ({\n  type: RECEIVE_TRANSFER_TO_REGISTRAR,\n  tx,\n});\n\nexport const errorTransferToRegistrar = (error) => ({\n  type: ERROR_TRANSFER_TO_REGISTRAR,\n  error,\n});\n\nexport const requestAuth = () => ({\n  type: REQUEST_AUTH,\n});\n\nexport const receiveAuth = (domain, owner, permissions) => ({\n  type: RECEIVE_AUTH,\n  domain,\n  owner,\n  permissions,\n});\n\nexport const errorAuth = (error) => ({\n  type: ERROR_AUTH,\n  error,\n});\n\nexport const confirmParsed = (parsed) => ({\n  type: CONFIRM_PARSED,\n  parsed,\n});\n\nexport const requestRegister = (index) => ({\n  type: REQUEST_REGISTER,\n  index,\n});\n\nexport const receiveRegister = (tx, index) => ({\n  type: RECEIVE_REGISTER,\n  tx,\n  index,\n});\n\nexport const errorRegister = (error, index) => ({\n  type: ERROR_REGISTER,\n  error,\n  index,\n});\n","import React, { Component } from 'react';\nimport {\n  Form, FormControl, Button, InputGroup, Spinner,\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { validateOwnership } from '../operations';\nimport { cleanValidateOwnership } from '../actions';\n\nclass ValidateOwnershipComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n    };\n\n    this.validate = this.validate.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n  }\n\n  handleChangeValue(e) {\n    this.setState({ value: e.target.value });\n\n    const { clean } = this.props;\n    clean();\n  }\n\n  validate(event) {\n    event.preventDefault();\n    const { validate } = this.props;\n    const { value } = this.state;\n\n    validate(value);\n  }\n\n  render() {\n    const { loading, error } = this.props;\n\n    return (\n      <Form onSubmit={this.validate}>\n        <Form.Group>\n          <Form.Label>Choose the domain to register subdomains of</Form.Label>\n          <InputGroup>\n            <FormControl type=\"text\" placeholder=\"domain.rsk\" disabled={loading} onChange={this.handleChangeValue} />\n            <InputGroup.Append>\n              <Button type=\"submit\" disabled={loading}>Validate</Button>\n            </InputGroup.Append>\n          </InputGroup>\n          {\n            loading && <Spinner variant=\"grow\" />\n          }\n          {\n            error\n            && (\n              <>\n                <small className=\"text-danger\">{error}</small>\n                <br />\n                <small>\n                  Check you are connected to RSK network with\n                  <span> </span>\n                  the owner&aposs wallet unlocked.\n                </small>\n              </>\n            )\n          }\n        </Form.Group>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.app.validateOwnership.loading,\n  error: state.app.validateOwnership.error,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  validate: (domain) => dispatch(validateOwnership(domain)),\n  clean: () => dispatch(cleanValidateOwnership()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ValidateOwnershipComponent);\n","import Web3 from 'web3';\nimport namehash from 'eth-ens-namehash';\nimport {\n  requestValidateOwnership, receiveValidateOwnership, errorValidateOwnership,\n  requestTransferToRegistrar, receiveTransferToRegistrar, errorTransferToRegistrar,\n  requestClaim, receiveClaim, errorClaim,\n  requestAuth, receiveAuth, errorAuth, requestRegister, receiveRegister, errorRegister,\n} from './actions';\nimport { NODE_OWNER, REGISTRANT } from './types';\n\n// This method will validate ownrship of the domain with\n// the account unlocked in Nifty Wallet.\nexport const validateOwnership = (domain) => (dispatch) => {\n  dispatch(requestValidateOwnership());\n\n  const web3 = new Web3(process.env.REACT_APP_RSK_NODE);\n\n  const rns = new web3.eth.Contract([\n    {\n      constant: true,\n      inputs: [\n        { name: 'node', type: 'bytes32' },\n      ],\n      name: 'owner',\n      outputs: [\n        { name: '', type: 'address' },\n      ],\n      payable: false,\n      stateMutability: 'view',\n      type: 'function',\n    },\n  ], process.env.REACT_APP_RNS_REGISTRY);\n\n  const node = namehash.hash(domain);\n\n  let account;\n\n  return window.ethereum.enable()\n    .then((accounts) => {\n      account = accounts[0].toLowerCase();\n    })\n    .then(() => rns.methods.owner(node).call())\n    .then((_owner) => {\n      const owner = _owner.toLowerCase();\n\n      if (owner === account) dispatch(receiveValidateOwnership(domain, owner));\n      else dispatch(errorValidateOwnership('Not domain\\'s owner'));\n    })\n    .catch(errorValidateOwnership);\n};\n\nexport const bathRegistrarClaim = (domain, from) => (dispatch) => {\n  dispatch(requestClaim());\n\n  const web3 = new Web3(window.web3);\n\n  const registrar = new web3.eth.Contract([\n    {\n      constant: false,\n      inputs: [\n        { name: 'node', type: 'bytes32' },\n      ],\n      name: 'claim',\n      outputs: [],\n      payable: false,\n      stateMutability: 'nonpayable',\n      type: 'function',\n    },\n  ], process.env.REACT_APP_BATCH_REGISTRAR);\n\n  const node = namehash.hash(domain);\n\n\n  return registrar.methods.claim(node).send({ from })\n    .then((tx) => dispatch(receiveClaim(tx)))\n    .catch((error) => dispatch(errorClaim(error)));\n};\n\nexport const transferToRegistrar = (domain, from) => (dispatch) => {\n  dispatch(requestTransferToRegistrar());\n\n  const web3 = new Web3(window.web3);\n\n  const rns = new web3.eth.Contract([\n    {\n      constant: false,\n      inputs: [\n        { name: 'node', type: 'bytes32' },\n        { name: 'ownerAddress', type: 'address' },\n      ],\n      name: 'setOwner',\n      outputs: [],\n      payable: false,\n      stateMutability: 'nonpayable',\n      type: 'function',\n    },\n  ], process.env.REACT_APP_RNS_REGISTRY);\n\n  const node = namehash.hash(domain);\n\n  return rns.methods.setOwner(node, process.env.REACT_APP_BATCH_REGISTRAR).send({ from })\n    .then((tx) => dispatch(receiveTransferToRegistrar(tx)))\n    .catch((error) => dispatch(errorTransferToRegistrar(error)));\n};\n\nexport const auth = (domain) => (dispatch) => {\n  dispatch(requestAuth());\n\n  const web3 = new Web3(process.env.REACT_APP_RSK_NODE);\n\n  const registrar = new web3.eth.Contract([\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"node\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"registrant\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isRegistrant\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"nodeOwner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n  ], process.env.REACT_APP_BATCH_REGISTRAR);\n\n  const node = namehash.hash(domain);\n\n  let account;\n  let permissions = [];\n\n  return window.ethereum.enable()\n    .then((accounts) => {\n      account = accounts[0].toLowerCase();\n    })\n    .then(() => registrar.methods.isRegistrant(node, account).call())\n    .then(result => {\n      if(result)\n        permissions.push(REGISTRANT);\n    })\n    .then(() => registrar.methods.nodeOwner(node).call())\n    .then(owner => {\n      if(owner.toLowerCase() === account)\n        permissions.push(NODE_OWNER);\n    })\n    .then(() => dispatch(receiveAuth(domain, account, permissions)))\n    .catch(error => dispatch(errorAuth(error)));\n}\n\nexport const register = (domain, labels, addresses, from, index) => (dispatch) => {\n  dispatch(requestRegister(index));\n\n  const web3 = new Web3(window.web3);\n\n  const registrar = new web3.eth.Contract([\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"rootNode\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"name\": \"labels\",\n          \"type\": \"bytes32[]\"\n        },\n        {\n          \"name\": \"addrs\",\n          \"type\": \"address[]\"\n        }\n      ],\n      \"name\": \"register\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ], process.env.REACT_APP_BATCH_REGISTRAR);\n\n  const node = namehash.hash(domain);\n\n  return registrar.methods.register(node, labels, addresses).send({ from })\n  .then((tx) => dispatch(receiveRegister(tx, index)))\n  .catch((error) => dispatch(errorRegister(error, index)));\n}\n","import React from 'react';\n\nexport default ({ tx }) => <a\n  href={`${process.env.REACT_APP_RSK_EXPLORER}/tx/${tx}`}\n  target=\"_blank\"\n  rel=\"noopener noreferrer\"\n>{tx}</a>;\n","import React from 'react';\nimport { Button, Form, FormGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bathRegistrarClaim } from '../operations';\nimport Tx from './Tx';\n\nconst ClaimComponent = ({\n  claim, claiming, tx, error,\n}) => (\n  <Form onSubmit={(e) => {\n    e.preventDefault();\n    claim();\n  }}\n  >\n    {!tx && <FormGroup><Button type=\"submit\" disabled={claiming}>Claim</Button></FormGroup>}\n    {tx && <small className=\"text-success\"><Tx tx={tx.transactionHash} /></small>}\n    {error && <small className=\"text-danger\">{error.message}</small>}\n  </Form>\n);\n\nconst mapStateToProps = ({ app }) => ({\n  ...app.claim,\n  domain: app.domain,\n  from: app.owner,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  claim: (domain, from) => dispatch(bathRegistrarClaim(domain, from)),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n  ...ownProps,\n  ...stateProps,\n  claim: () => dispatchProps.claim(stateProps.domain, stateProps.from),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(ClaimComponent);\n","import React from 'react';\nimport { Button, Form, FormGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { transferToRegistrar } from '../operations';\nimport Tx from './Tx';\n\nconst TransferToRegistrarComponent = ({\n  enabled, transfer, transferring, tx, error,\n}) => {\n  const disabled = !enabled || transferring;\n\n  return (\n    <Form onSubmit={(e) => {\n      e.preventDefault();\n      transfer();\n    }}\n    >\n      {!tx && (\n      <FormGroup>\n        <Button type=\"submit\" className={disabled && 'btn-info'} disabled={disabled}>Transfer</Button>\n      </FormGroup>\n      )}\n      {tx && <small className=\"text-success\"><Tx tx={tx.transactionHash} /></small>}\n      {error && <small className=\"text-danger\">{error.message}</small>}\n    </Form>\n  );\n};\n\nconst mapStateToProps = ({ app }) => ({\n  ...app.transferToRegistrar,\n  domain: app.domain,\n  from: app.owner,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  transfer: (domain, from) => dispatch(transferToRegistrar(domain, from)),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n  ...ownProps,\n  ...stateProps,\n  transfer: () => dispatchProps.transfer(stateProps.domain, stateProps.from),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(TransferToRegistrarComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Container, Row, Col, OverlayTrigger, Tooltip,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ValidateOwnership from './ValidateOwnership';\nimport Claim from './Claim';\nimport TransferToRegistrar from './TransferToRegistrar';\n\nconst Setup = ({ domain, claimed, transferred }) => (\n  <Container className=\"text-center\">\n    <div className=\"col-lg-12 main-title-box\">\n      <h1><b>Setup</b></h1>\n    </div>\n    <p>\n      The setup process consist of transferring the domain momentarily\n      to the subdomain registrar, a smart contract that allows to register\n      subdomains to selected operators.\n    </p>\n    <Row>\n      <Col>\n        {domain ? <h2>{domain}</h2> : <ValidateOwnership />}\n      </Col>\n    </Row>\n    {\n      domain\n      && (\n        <>\n          <hr />\n          <Row>\n            <Col>\n              <p>Now you have to execute 2 transactions. You will need to do this just once.</p>\n              <p>\n                Claim your domain\n                {' '}\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={(\n                    <Tooltip id=\"tooltip1-top\">\n                      Claim your domain in the batch registrar contract. This will set you as the\n                      <span> </span>\n                      admin of the domain and the only registrant. Will also give you permission to\n                      <span> </span>\n                      add ore remove other registrants, and recover your domain ownership.\n                    </Tooltip>\n                  )}\n                >\n                  <span className=\"text-info\"> ?</span>\n                </OverlayTrigger>\n              </p>\n              <Claim />\n              <p>\n                Transfer ownership to Subdomain Registrar.\n                {' '}\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={(\n                    <Tooltip id=\"tooltip2-top\">\n                      This will set the smart contract as the owner of the RNS domain.\n                      <span> </span>\n                      You can recover your domain ownership when you want to.\n                    </Tooltip>\n                  )}\n                >\n                  <span className=\"text-info\"> ?</span>\n                </OverlayTrigger>\n              </p>\n              <TransferToRegistrar enabled={claimed} />\n            </Col>\n          </Row>\n        </>\n      )\n    }\n    {\n      domain && transferred\n      && (\n        <>\n          <hr />\n          <p>\n            Done!\n          </p>\n          <p>\n            {'Please '}\n            <Link to=\"/subdomains\">validate your csv files</Link>\n            {' before executing any registration.'}\n          </p>\n        </>\n      )\n    }\n  </Container>\n);\n\nconst mapStateToProps = ({ app }) => ({\n  domain: app.domain,\n  claimed: !!app.claim.tx,\n  transferred: !!app.transferToRegistrar.tx,\n});\n\nexport default connect(mapStateToProps)(Setup);\n","import React, { Component } from 'react';\nimport {\n  Container, Table, Spinner, Button,\n} from 'react-bootstrap';\nimport CSVReader from 'react-csv-reader';\nimport { isAddress } from 'web3-utils';\nimport { connect } from 'react-redux';\nimport { isValidLabel } from '../lib';\nimport { confirmParsed } from '../actions';\nimport { push } from 'connected-react-router';\nimport { sha3 } from 'web3-utils';\n\nconst partSize = 50;\n\nconst parseSolvedErrors = (errors) => {\n  let error = [];\n\n  if (errors.labelNoSpaces) error.push('No spaces');\n  if (errors.labelToLower) error.push('Lower cases');\n  if (errors.noMails) error.push('No mails');\n  if (errors.labelsNoEnie) error.push('No \\'ñ\\'');\n  if (errors.noSeparators) error.push('No _ - . ,')\n  if (errors.noTilde) error.push('No \\'')\n\n  return error.map(e => (\n    <p key={e}>\n      {e}\n      <br />\n    </p>\n  ));\n};\n\nconst parseUnsolvedErrors = (errors) => {\n  let error = [];\n\n  if (errors.invalidAddress) error.push('Invalid address');\n  if (errors.invalidLabel) error.push('Invalid label');\n\n  return error.map(e => (\n    <p key={e}>\n      {e}\n      <br />\n    </p>\n  ));\n};\n\nconst parsedToCsv = (parsed) => {\n  let result = '';\n\n  for (let i = 0; i < parsed.length; i += 1)\n    result += `${parsed[i][0]},${parsed[i][1]}\\n`;\n\n  return result;\n}\n\nconst download = (filename, text) => {\n  var element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nconst parsedDataToParts = (parsedData) => {\n  const labels = []\n  const addresses = []\n\n  for (let i = 0; i < parsedData.length; i += 1) {\n    labels.push(sha3(parsedData[i][0]));\n    addresses.push(parsedData[i][1]);\n  }\n\n  const amountOfParts = Math.floor(labels.length / partSize);\n\n  const parts = []\n  for (let i = 0; i < amountOfParts; i += 1) {\n    parts.push({\n      from: i * partSize,\n      to: (i+1) * partSize,\n      value: [\n        labels.slice(i * partSize, (i+1) * partSize),\n        addresses.slice(i * partSize, (i+1) * partSize),\n      ],\n    });\n  }\n\n  parts.push({\n    from: amountOfParts * partSize,\n    to: labels.length,\n    value: [\n      labels.slice(amountOfParts * partSize, labels.length),\n      addresses.slice(amountOfParts * partSize, addresses.length),\n    ]\n  });\n\n  return parts;\n}\n\nclass Subdomains extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      validating: false,\n      data: null,\n      allSolvedConflicts: [],\n      allUnsolvedConflicts: [],\n      parsed: null,\n    };\n\n    this.handleUploadFile = this.handleUploadFile.bind(this);\n    this.accept = this.accept.bind(this);\n    this.handleDownloadParsed = this.handleDownloadParsed.bind(this);\n    this.accept = this.accept.bind(this);\n  }\n\n  handleUploadFile(data) {\n    this.setState({ validating: true });\n\n    const allSolvedConflicts = [];\n    const allUnsolvedConflicts = [];\n\n    const parsed = [];\n\n    for (let i = 0; i < data.length; i += 1) {\n      let [label, address] = data[i];\n\n      const solvedConflicts = {};\n      const unsolvedConflicts = {};\n\n      // solvable\n      if (label.indexOf(' ') >= 0) {\n        label = label.replace(/ /g, '');\n        solvedConflicts.labelNoSpaces = true;\n      }\n\n      if (label !== label.toLowerCase()) {\n        label = label.toLowerCase();\n        solvedConflicts.labelToLower = true;\n      }\n\n      const indexOfAt = label.indexOf('@');\n      if (indexOfAt >= 0) {\n        label = label.slice(0, indexOfAt);\n        solvedConflicts.noMails = true;\n      }\n\n      if (label.indexOf('ñ') >= 0) {\n        label = label.replace(/(ñ)/g, 'n');\n        solvedConflicts.labelsNoEnie = true;\n      }\n\n      if(label.match(/[-_.,]/g)) {\n        label = label.replace(/(\\.)/g, '');\n        label = label.replace(/(_)/g, '');\n        label = label.replace(/(-)/g, '');\n        label = label.replace(/(,)/g, '');\n        solvedConflicts.noSeparators = true;\n      }\n\n      if(label.match(/[áéíóúü]/g)) {\n        label = label.replace(/(á)/g, 'a');\n        label = label.replace(/(é)/g, 'e');\n        label = label.replace(/(í)/g, 'i');\n        label = label.replace(/(ó)/g, 'o');\n        label = label.replace(/(ú)/g, 'u');\n        label = label.replace(/(ü)/g, 'u');\n        solvedConflicts.noTilde = true;\n      }\n\n      // unsolvable\n      address = address.toLowerCase();\n\n      if (!isAddress(address)) {\n        unsolvedConflicts.invalidAddress = true;\n      }\n\n      if (!isValidLabel(label))\n        unsolvedConflicts.invalidLabel = true;\n\n      allSolvedConflicts.push(solvedConflicts);\n      allUnsolvedConflicts.push(unsolvedConflicts);\n      parsed.push([label, address]);\n    }\n\n    this.setState({\n      validating: false,\n      data,\n      allSolvedConflicts,\n      allUnsolvedConflicts,\n      parsed,\n    });\n  }\n\n  handleDownloadParsed() {\n    const { parsed } = this.state;\n\n    download(`subdomains-${Date.now()}.csv`, parsedToCsv(parsed));\n  }\n\n  accept() {\n    const { confirmParsed, goToRegister } = this.props;\n    const { parsed } = this.state;\n\n    confirmParsed(parsedDataToParts(parsed));\n    goToRegister();\n  }\n\n  render() {\n    const {\n      validating,\n      data,\n      allSolvedConflicts,\n      allUnsolvedConflicts,\n      parsed,\n    } = this.state;\n\n    const anyUnsolved = allUnsolvedConflicts.length > 0 && allUnsolvedConflicts.some(c => Object.keys(c).length > 0);\n\n    const { domain } = this.props;\n\n    return (\n      <Container className=\"text-center\">\n        <div className=\"col-lg-12 main-title-box\">\n          <h1><b>Register subdomains</b></h1>\n        </div>\n        <p>\n          Register subdomains importing a <code>csv</code> file.\n        </p>\n        <p>\n          The\n          {' '}\n          <code>csv</code>\n          {' '}\nfile must include only two columns:\n            the labels to register in the first column\n            and the address to set in the second column.\n        </p>\n        <p>\n          First validate the entries. The app will apply some changes\n          <span> </span>and request to approve them before registering.\n        </p>\n        <CSVReader onFileLoaded={this.handleUploadFile} disabled={validating} />\n        {validating && <Spinner animation=\"grow\" />}\n        {\n          !validating && parsed && (\n            anyUnsolved ?\n            <p>\n              Some format conflict was found and not solved. Subdomains&#32;\n              Subdomains must be lowercase alfanumeric values and addresses&#32;\n              must be 20 bytes hex.\n            </p> :\n            <>\n              <p>\n                All found conflicts were solved. <Button variant=\"link\" onClick={this.handleDownloadParsed}>Download</Button> the&#32;\n                resultant <code>csv</code> file.\n              </p>\n              <Button onClick={this.accept}>Register!</Button>\n            </>\n          )\n        }\n        <hr />\n        {\n          !validating && parsed\n          && (\n            <>\n              <p>Check all solved conflicts in yellow and unsolved in red.</p>\n              <Table>\n                <thead>\n                  <tr>\n                    <th>input</th>\n                    <th>solved conflicts</th>\n                    <th>unsolved conflicts</th>\n                    <th>to register</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    data.map((value, index) => (\n                      <tr\n                        key={`${value[1]}${index}`}\n                        className={\n                          Object.keys(allUnsolvedConflicts[index]).length > 0 ?\n                          'table-danger' :\n                          (\n                            Object.keys(allSolvedConflicts[index]).length > 0 ?\n                            'table-warning' :\n                            ''\n                          )\n                        }\n                      >\n                        <td>{`(${value[0]}, ${value[1]})`}</td>\n                        <td >{parseSolvedErrors(allSolvedConflicts[index])}</td>\n                        <td>{parseUnsolvedErrors(allUnsolvedConflicts[index])}</td>\n                        <td>{`(${parsed[index][0]}.${domain}, ${parsed[index][1]})`}</td>\n                      </tr>\n                    ))\n                  }\n                </tbody>\n              </Table>\n            </>\n          )\n        }\n        <hr />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ app }) => ({\n  domain: app.domain,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  confirmParsed: (parsed) => dispatch(confirmParsed(parsed)),\n  goToRegister: () => dispatch(push('/register')),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Subdomains);\n","import React from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Button,\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { register } from '../operations';\nimport Tx from './Tx';\n\nconst Register = ({ register, data, registerResults }) => (\n  <Container className=\"text-center\">\n    <div className=\"col-lg-12 main-title-box\">\n      <h1><b>Execute registration</b></h1>\n    </div>\n    {\n      data.map((dataRow, i) => {\n        const { tx, error, registering, index } = registerResults[i];\n\n        return (\n          <Row key={index}>\n            <Col>From {dataRow.from} to {dataRow.to}</Col>\n            <Col>\n              <Form onSubmit={(e) => {\n                e.preventDefault();\n                register(dataRow.value[0], dataRow.value[1], index);\n              }}\n              >\n                {\n                  !tx &&\n                  <FormGroup>\n                    <Button type=\"submit\" disabled={registering || (tx && !!tx.transactionHash)}>Register</Button>\n                  </FormGroup>\n                }\n                {tx && <small className=\"text-success\"><Tx tx={tx.transactionHash} /></small>}\n                {error && <small className=\"text-danger\">{error.message}</small>}\n              </Form>\n            </Col>\n          </Row>\n        );\n      })\n    }\n  </Container>\n);\n\nconst mapStateToProps = ({ app }) => ({\n  data: app.parsed,\n  domain: app.domain,\n  owner: app.owner,\n  registerResults: app.register,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  register: (domain, labels, addresses, from, index) => dispatch(register(domain, labels, addresses, from, index)),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) => ({\n  ...ownProps,\n  ...stateProps,\n  register: (labels, addresses, index) => dispatchProps.register(\n    stateProps.domain,\n    labels,\n    addresses,\n    stateProps.owner,\n    index,\n  ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(Register);\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nexport default () => (\n  <Container>\n    <div className=\"col-lg-12 text-center main-title-box\">\n      <h1><b>FAQ</b></h1>\n    </div>\n  </Container>\n);\n","import React, { Component } from 'react';\nimport {\n  Container, Row, Col, Form, FormControl, Button, InputGroup, Spinner,\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { auth } from '../operations';\nimport { Link } from 'react-router-dom';\n\nclass ValidateOwnershipComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n    };\n\n    this.authenticate = this.authenticate.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n  }\n\n  handleChangeValue(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  authenticate(event) {\n    event.preventDefault();\n    const { auth } = this.props;\n    const { value } = this.state;\n\n    auth(value);\n  }\n\n  render() {\n    const { authenticating, error, permissions, domain } = this.props;\n\n    return (\n      <Container className=\"text-center\">\n        <Row>\n          <Col>\n            {\n              permissions.length === 0 ?\n              <Form onSubmit={this.authenticate}>\n                <Form.Group>\n                  <InputGroup>\n                    <FormControl type=\"text\" placeholder=\"domain.rsk\" disabled={authenticating} onChange={this.handleChangeValue} />\n                    <InputGroup.Append>\n                      <Button type=\"submit\" disabled={authenticating}>Log in</Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  {\n                    authenticating && <Spinner variant=\"grow\" />\n                  }\n                  {\n                    error\n                    && (\n                      <>\n                        <small className=\"text-danger\">{error}</small>\n                        <br />\n                        <small>\n                          Check you are connected to RSK network with\n                          <span> </span>\n                          the owner&aposs wallet unlocked.\n                        </small>\n                      </>\n                    )\n                  }\n                </Form.Group>\n              </Form> :\n              <>\n                <p>Welcome {domain}!</p>\n                <Link className=\"btn btn-success\" to=\"/subdomains\">Register subdomains</Link>\n              </>\n            }\n          </Col>\n        </Row>\n        <hr />\n        <Row>\n          <Col>\n            <p>\n              Please complete the\n              <span> </span><Link to=\"/setup\">setup</Link><span> </span>\n              before logging in.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ app }) => ({\n  permissions: app.auth.permissions,\n  authenticating: app.auth.authenticating,\n  error: app.auth.error,\n  domain: app.domain,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  auth: (domain) => dispatch(auth(domain)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ValidateOwnershipComponent);\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nexport default () => (\n  <Container className=\"text-center\">\n    <Row>\n      <Col>\n        <p>404. Not found.</p>\n      </Col>\n    </Row>\n  </Container>\n);\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nexport default () => (\n  <Container>\n    <Row>\n      <div className=\"col-lg-12 text-center main-title-box\">\n        <h1><b>Admin</b></h1>\n      </div>\n      <Col>\n        <ul>\n          <li>Add registrant</li>\n          <li>Remove registrant</li>\n          <li>Check registrant</li>\n          <li>Recover domain ownership</li>\n        </ul>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <p>\n          This section is in development. Find the\n          <span> </span>\n          <a href=\"https://github.com/rnsdomains/rns-subdomain-batch/projects/1\" target=\"_blank\" rel=\"noopener noreferrer\">Github project</a>\n          <span> </span>\n          to collaborate.\n        </p>\n      </Col>\n    </Row>\n  </Container>\n);\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport {\n  Header,\n  Footer,\n  Home,\n  Setup,\n  Subdomains,\n  FAQ,\n  Auth,\n  NotFound,\n  Register,\n} from './components';\nimport Admin from './components/Admin';\nimport { connect } from 'react-redux';\nimport { NODE_OWNER, REGISTRANT } from './types';\n\nconst App = ({ showRegister, showAdmin }) => (\n  <>\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" render={() => <Home />} />\n      <Route path=\"/setup\" render={() => <Setup />} />\n      <Route path=\"/subdomains\" render={() => showRegister ? <Subdomains /> : <Redirect to=\"/login\" />} />\n      <Route path=\"/register\" render={() => showRegister ? <Register /> : <Redirect to=\"/login\" />} />\n      <Route path=\"/admin\" render={() => showAdmin ? <Admin /> : <Redirect to=\"/login\" />} />\n      <Route path=\"/login\" render={() => <Auth />} />\n      <Route path=\"/faq\" render={() => <FAQ />} />\n      <Route render={() => <NotFound />} />\n    </Switch>\n    <Footer />\n  </>\n);\n\n\nconst mapStateToProps = ({ app }) => ({\n  showRegister: app.auth.permissions.includes(REGISTRANT),\n  showAdmin: app.auth.permissions.includes(NODE_OWNER),\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((_registration) => {\n      const registration = _registration;\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              /* eslint-disable no-console */\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                /* eslint-disable no-console */\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              /* eslint-disable no-console */\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      /* eslint-disable no-console */\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport {\n  REQUEST_VALIDATE_OWNERSHIP, RECEIVE_VALIDATE_OWNERSHIP,\n  ERROR_VALIDATE_OWNERSHIP, CLEAN_VALIDATE_OWNERSHIP,\n  REQUEST_TRANSFER_TO_REGISTRAR, RECEIVE_TRANSFER_TO_REGISTRAR, ERROR_TRANSFER_TO_REGISTRAR,\n  REQUEST_CLAIM, RECEIVE_CLAIM, ERROR_CLAIM,\n  REQUEST_AUTH, RECEIVE_AUTH, ERROR_AUTH,\n  NODE_OWNER, REGISTRANT, CONFIRM_PARSED,\n  REQUEST_REGISTER, RECEIVE_REGISTER, ERROR_REGISTER,\n} from './types';\n\nconst initialState = {\n  domain: null,\n  owner: null,\n  validateOwnership: {\n    enabled: false,\n    loading: false,\n    error: null,\n  },\n  claim: {\n    claiming: false,\n    tx: null,\n    error: null,\n  },\n  transferToRegistrar: {\n    transferring: false,\n    tx: null,\n    error: null,\n  },\n  auth: {\n    permissions: [],\n    authenticating: false,\n    error: null,\n  },\n  parsed: null,\n  register: [],\n};\n\nconst createRegistration = (index) => ({\n  index,\n  tx: null,\n  error: null,\n  registering: false,\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REQUEST_VALIDATE_OWNERSHIP: return {\n      ...state,\n      domain: null,\n      owner: null,\n      validateOwnership: {\n        loading: true,\n        error: null,\n      },\n    };\n    case RECEIVE_VALIDATE_OWNERSHIP: return {\n      ...state,\n      domain: action.domain,\n      owner: action.owner,\n      validateOwnership: {\n        loading: false,\n        error: null,\n      },\n    };\n    case ERROR_VALIDATE_OWNERSHIP: return {\n      ...state,\n      domain: null,\n      owner: null,\n      validateOwnership: {\n        loading: false,\n        error: action.error,\n      },\n    };\n    case CLEAN_VALIDATE_OWNERSHIP: return {\n      ...state,\n      domain: null,\n      owner: null,\n      validateOwnership: {\n        loading: false,\n        error: null,\n      },\n    };\n    case REQUEST_CLAIM: return {\n      ...state,\n      claim: {\n        claiming: true,\n        tx: null,\n        error: null,\n      },\n    };\n    case RECEIVE_CLAIM: return {\n      ...state,\n      claim: {\n        claiming: false,\n        tx: action.tx,\n        error: null,\n      },\n    };\n    case ERROR_CLAIM: return {\n      ...state,\n      claim: {\n        claiming: false,\n        tx: null,\n        error: action.error,\n      },\n    };\n    case REQUEST_TRANSFER_TO_REGISTRAR: return {\n      ...state,\n      transferToRegistrar: {\n        transferring: true,\n        tx: null,\n        error: null,\n      },\n    };\n    case RECEIVE_TRANSFER_TO_REGISTRAR: return {\n      ...state,\n      transferToRegistrar: {\n        transferring: false,\n        tx: action.tx,\n        error: null,\n      },\n      auth: {\n        permissions: [NODE_OWNER, REGISTRANT]\n      }\n    };\n    case ERROR_TRANSFER_TO_REGISTRAR: return {\n      ...state,\n      transferToRegistrar: {\n        transferring: false,\n        tx: null,\n        error: action.error,\n      },\n    };\n    case REQUEST_AUTH: return {\n      ...state,\n      domain: null,\n      auth: {\n        authenticating: true,\n        permissions: [],\n        error: null,\n      },\n    };\n    case RECEIVE_AUTH: return {\n      ...state,\n      domain: action.domain,\n      owner: action.owner,\n      auth: {\n        authenticating: false,\n        permissions: action.permissions,\n        error: null,\n      },\n    };\n    case ERROR_AUTH: return {\n      ...state,\n      domain: null,\n      auth: {\n        authenticating: false,\n        permissions: [],\n        error: action.error,\n      },\n    };\n    case CONFIRM_PARSED: {\n      let register = [];\n      for(let i = 0; i < action.parsed.length; i += 1)\n        register.push(createRegistration(i));\n\n      return {\n        ...state,\n        parsed: action.parsed,\n        register,\n      }\n    }\n    case REQUEST_REGISTER: return {\n      ...state,\n      register: state.register.map(r => r.index === action.index ? {\n        index: r.index,\n        tx: null,\n        error: null,\n        registering: true,\n      } : r),\n    };\n    case RECEIVE_REGISTER: return {\n      ...state,\n      register: state.register.map(r => r.index === action.index ? {\n        index: r.index,\n        tx: action.tx,\n        error: null,\n        registering: false,\n      } : r),\n    };\n    case ERROR_REGISTER: return {\n      ...state,\n      register: state.register.map(r => r.index === action.index ? {\n        index: r.index,\n        tx: null,\n        error: action.error,\n        registering: false,\n      } : r ),\n    };\n    default: return state;\n  }\n};\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  app: reducer,\n});\n","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport createRootReducer from './reducer';\n\nexport const history = createBrowserHistory({ basename: '/rns-subdomain-batch' });\n\nconst middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history), // root reducer with router state\n    preloadedState,\n    compose(\n      applyMiddleware(...middleware),\n    ),\n  );\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore, { history } from './configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}